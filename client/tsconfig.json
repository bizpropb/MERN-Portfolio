{
  "compilerOptions": {
    "target": "ESNext",                     // version of JavaScript to compile to - ESNext for modern builds
    
    // === WHAT FEATURES TYPESCRIPT KNOWS ABOUT === //
    "lib": ["DOM", "DOM.Iterable", "ES2022"],  // include: type definitions for browser APIs and modern ES features
    "module": "ESNext",                     // use: latest ES module syntax (import/export) - best for bundlers
    "moduleResolution": "bundler",          // use: bundler-specific resolution for modern tooling like Vite
    "jsx": "react-jsx",                     // compile: JSX to React.createElement calls
    
    // === FILE HANDLING === //
    "allowJs": true,                        // allows: .js files
    "skipLibCheck": true,                   // disallow: type-checking node_modules (faster compilation)
    "esModuleInterop": true,                // allows: importing CommonJS modules with ES6 syntax
    "allowSyntheticDefaultImports": true,   // allows: default imports from modules without default export
    "resolveJsonModule": true,              // allows: import data from './data.json'
    "isolatedModules": true,                // allows: sole file compilation (Vite requirement)
    "noEmit": true,                         // disallow: .js file output (Vite handles compilation)
    "verbatimModuleSyntax": true,           // allows: explicit type-only imports for better bundling
    
    // === PERFORMANCE OPTIMIZATIONS === //
    "allowImportingTsExtensions": true,     // allows: importing .ts/.tsx files directly (modern bundlers support this)
    "moduleDetection": "force",             // use: all files as modules (better tree-shaking)
    
    // === ACTUALLY USEFUL ERROR CHECKING === //
    "noImplicitReturns": true,              // disallow: functions with missing return statements
    "noFallthroughCasesInSwitch": true,     // disallow: switch cases without break statements
    "noUncheckedIndexedAccess": true,       // adds: undefined check when accessing arrays/objects by index
    
    // === DISABLE OVERLY STRICT TYPE CHECKING === //
    "noImplicitAny": false,                 // allows: variables without explicit types
    "strictNullChecks": false,              // allows: null/undefined assignments
    "strict": false                         // disallow: all strict type checking rules
  },
  "include": ["src"]                        // defines: folders to compile
}