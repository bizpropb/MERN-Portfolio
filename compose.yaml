version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: mern-mongodb
    restart: "no"
    #command: mongod --quiet --logpath /dev/null  #uncomment this to silence mongodb logs 
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: portfolio
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  # PostgreSQL
  postgresql:
    image: postgres:16
    container_name: pern-postgresql
    restart: "no"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: portfolio
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./docker/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql:ro
    networks:
      - app-network

  # Node.js Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: mern-server
    restart: "no"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_TYPE=mongodb
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/portfolio?authSource=admin
      - POSTGRESQL_HOST=postgresql
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USER=admin
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_DATABASE=portfolio
      - CLIENT_URL=http://localhost:3000
      - JWT_SECRET=mern-portfolio-super-secret-jwt-key-2025-very-long-and-secure-123456789
      - JWT_EXPIRE=30d
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - postgresql
    networks:
      - app-network

  # React Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    container_name: mern-client
    restart: "no"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - app-network

  # MongoDB Admin UI
  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: "no"
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - app-network   

  # PostgreSQL Admin UI
  pgadmin:
    image: dpage/pgadmin4:8.1
    container_name: pgadmin
    restart: "no"
    ports:
      - "8082:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgresql

  # Database Seeding Service
  seed:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: mern-seed
    command: npm run seed
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/portfolio?authSource=admin
      - DATABASE_TYPE=mongodb
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - server
    profiles:
      - tools
    networks:
      - app-network

volumes:
  mongodb_data:
  postgresql_data:
  pgadmin_data:

networks:
  app-network:
    driver: bridge